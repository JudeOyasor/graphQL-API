"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ResourceGroupsTaggingAPIClient_1 = require("./ResourceGroupsTaggingAPIClient");
var GetResourcesCommand_1 = require("./commands/GetResourcesCommand");
var GetTagKeysCommand_1 = require("./commands/GetTagKeysCommand");
var GetTagValuesCommand_1 = require("./commands/GetTagValuesCommand");
var TagResourcesCommand_1 = require("./commands/TagResourcesCommand");
var UntagResourcesCommand_1 = require("./commands/UntagResourcesCommand");
var ResourceGroupsTaggingAPI = /** @class */ (function (_super) {
    tslib_1.__extends(ResourceGroupsTaggingAPI, _super);
    function ResourceGroupsTaggingAPI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResourceGroupsTaggingAPI.prototype.getResources = function (args, cb) {
        // create the appropriate command and pass it to .send
        var command = new GetResourcesCommand_1.GetResourcesCommand(args);
        if (typeof cb === "function") {
            this.send(command, cb);
        }
        else {
            return this.send(command);
        }
    };
    ResourceGroupsTaggingAPI.prototype.getTagKeys = function (args, cb) {
        // create the appropriate command and pass it to .send
        var command = new GetTagKeysCommand_1.GetTagKeysCommand(args);
        if (typeof cb === "function") {
            this.send(command, cb);
        }
        else {
            return this.send(command);
        }
    };
    ResourceGroupsTaggingAPI.prototype.getTagValues = function (args, cb) {
        // create the appropriate command and pass it to .send
        var command = new GetTagValuesCommand_1.GetTagValuesCommand(args);
        if (typeof cb === "function") {
            this.send(command, cb);
        }
        else {
            return this.send(command);
        }
    };
    ResourceGroupsTaggingAPI.prototype.tagResources = function (args, cb) {
        // create the appropriate command and pass it to .send
        var command = new TagResourcesCommand_1.TagResourcesCommand(args);
        if (typeof cb === "function") {
            this.send(command, cb);
        }
        else {
            return this.send(command);
        }
    };
    ResourceGroupsTaggingAPI.prototype.untagResources = function (args, cb) {
        // create the appropriate command and pass it to .send
        var command = new UntagResourcesCommand_1.UntagResourcesCommand(args);
        if (typeof cb === "function") {
            this.send(command, cb);
        }
        else {
            return this.send(command);
        }
    };
    return ResourceGroupsTaggingAPI;
}(ResourceGroupsTaggingAPIClient_1.ResourceGroupsTaggingAPIClient));
exports.ResourceGroupsTaggingAPI = ResourceGroupsTaggingAPI;
//# sourceMappingURL=ResourceGroupsTaggingAPI.js.map