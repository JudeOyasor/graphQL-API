import { __extends } from "tslib";
import { GetResourcesInput, GetResourcesOutput } from "../models/models_0";
import { deserializeAws_json1_1GetResourcesCommand, serializeAws_json1_1GetResourcesCommand, } from "../protocols/Aws_json1_1";
import { getSerdePlugin } from "@aws-sdk/middleware-serde";
import { Command as $Command } from "@aws-sdk/smithy-client";
/**
 * <p>Returns all the tagged or previously tagged resources that are located in the
 *             specified Region for the AWS account.</p>
 *         <p>Depending on what information you want returned, you can also specify the
 *             following:</p>
 *         <ul>
 *             <li>
 *                 <p>
 *                   <i>Filters</i> that specify what tags and resource types you
 *                     want returned. The response includes all tags that are associated with the
 *                     requested resources.</p>
 *             </li>
 *             <li>
 *                 <p>Information about compliance with the account's effective tag policy. For more
 *                     information on tag policies, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">Tag
 *                         Policies</a> in the <i>AWS Organizations User Guide.</i>
 *                </p>
 *             </li>
 *          </ul>
 *         <note>
 *             <p>You can check the <code>PaginationToken</code> response parameter to determine if
 *                 a query is complete. Queries occasionally return fewer results on a page than
 *                 allowed. The <code>PaginationToken</code> response parameter value is
 *                     <code>null</code>
 *                 <i>only</i> when there are no more results to display. </p>
 *         </note>
 */
var GetResourcesCommand = /** @class */ (function (_super) {
    __extends(GetResourcesCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function GetResourcesCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    /**
     * @internal
     */
    GetResourcesCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "ResourceGroupsTaggingAPIClient";
        var commandName = "GetResourcesCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: GetResourcesInput.filterSensitiveLog,
            outputFilterSensitiveLog: GetResourcesOutput.filterSensitiveLog,
        };
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    GetResourcesCommand.prototype.serialize = function (input, context) {
        return serializeAws_json1_1GetResourcesCommand(input, context);
    };
    GetResourcesCommand.prototype.deserialize = function (output, context) {
        return deserializeAws_json1_1GetResourcesCommand(output, context);
    };
    return GetResourcesCommand;
}($Command));
export { GetResourcesCommand };
//# sourceMappingURL=GetResourcesCommand.js.map